{"/Users/patrickmunnellly/Projects/raven-pack-frontend-tech-challenge/raven-pack-frontend-tech-challenge/src/components/PosterFilter.tsx":{"path":"/Users/patrickmunnellly/Projects/raven-pack-frontend-tech-challenge/raven-pack-frontend-tech-challenge/src/components/PosterFilter.tsx","statementMap":{"0":{"start":{"line":9,"column":18},"end":{"line":16,"column":1}},"1":{"start":{"line":17,"column":20},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":21},"end":{"line":101,"column":1}},"3":{"start":{"line":19,"column":23},"end":{"line":26,"column":3}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":13}},"5":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"6":{"start":{"line":24,"column":21},"end":{"line":24,"column":134}},"7":{"start":{"line":27,"column":2},"end":{"line":100,"column":11}},"8":{"start":{"line":46,"column":35},"end":{"line":46,"column":54}},"9":{"start":{"line":65,"column":50},"end":{"line":80,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":21},"end":{"line":18,"column":22}},"loc":{"start":{"line":18,"column":67},"end":{"line":101,"column":1}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":23},"end":{"line":19,"column":24}},"loc":{"start":{"line":19,"column":34},"end":{"line":26,"column":3}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":6},"end":{"line":24,"column":7}},"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":134}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":46,"column":21},"end":{"line":46,"column":22}},"loc":{"start":{"line":46,"column":35},"end":{"line":46,"column":54}},"line":46},"4":{"name":"(anonymous_4)","decl":{"start":{"line":65,"column":22},"end":{"line":65,"column":23}},"loc":{"start":{"line":65,"column":50},"end":{"line":80,"column":18}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":134}},"type":"cond-expr","locations":[{"start":{"line":24,"column":77},"end":{"line":24,"column":79}},{"start":{"line":24,"column":82},"end":{"line":24,"column":134}}],"line":24},"1":{"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":74}},"type":"binary-expr","locations":[{"start":{"line":24,"column":21},"end":{"line":24,"column":48}},{"start":{"line":24,"column":52},"end":{"line":24,"column":74}}],"line":24},"2":{"loc":{"start":{"line":24,"column":82},"end":{"line":24,"column":134}},"type":"cond-expr","locations":[{"start":{"line":24,"column":110},"end":{"line":24,"column":126}},{"start":{"line":24,"column":129},"end":{"line":24,"column":134}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/patrickmunnellly/Projects/raven-pack-frontend-tech-challenge/raven-pack-frontend-tech-challenge/src/components/PosterFilter.tsx"],"sourcesContent":["import * as React from \"react\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\ntype Props = {\n  posters: string[];\n  selectedPosters: string[];\n  setPosters: React.Dispatch<React.SetStateAction<string[]>>\n};\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      //   maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      //   width: 250,\n    },\n  },\n};\n\nconst RESET_VALUE = \"Reset\";\n\nconst PosterFilter = ({ posters,setPosters,selectedPosters }: Props) => {\n//   const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleChange = (event: SelectChangeEvent<typeof posters>) => {\n    const {\n      target: { value },\n    } = event;\n    setPosters((prevValue) =>\n      value.includes(RESET_VALUE) && prevValue.length !== 0\n        ? []\n        : typeof value === \"string\"\n        ? value.split(\",\")\n        : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 1000 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">\n          Posters Filter\n        </InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={selectedPosters}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Tag\" />}\n          renderValue={(selected) => selected.join(\", \")}\n          MenuProps={MenuProps}\n        >\n          <MenuItem key={\"Deselect-all\"} value={RESET_VALUE}>\n            <Checkbox checked={posters.length === 0} />\n            <ListItemText primary={RESET_VALUE} />\n          </MenuItem>\n\n          {posters.map((poster: string) => (\n            <MenuItem key={poster} value={poster}>\n              <Checkbox checked={selectedPosters.indexOf(poster) > -1} />\n              <ListItemText primary={poster} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default PosterFilter;\n"],"mappings":"AA8CQ;AA7CR,OAAO,mBAAmB;AAC1B,OAAO,gBAAgB;AACvB,OAAO,cAAc;AACrB,OAAO,iBAAiB;AACxB,OAAO,kBAAkB;AACzB,OAAO,YAAmC;AAC1C,OAAO,cAAc;AASrB,MAAM,YAAY;AAAA,EAChB,YAAY;AAAA,IACV,OAAO;AAAA;AAAA;AAAA,IAGP;AAAA,EACF;AACF;AAEA,MAAM,cAAc;AAEpB,MAAM,eAAe,CAAC,EAAE,SAAQ,YAAW,gBAAgB,MAAa;AAGtE,QAAM,eAAe,CAAC,UAA6C;AACjE,UAAM;AAAA,MACJ,QAAQ,EAAE,MAAM;AAAA,IAClB,IAAI;AACJ;AAAA,MAAW,CAAC,cACV,MAAM,SAAS,WAAW,KAAK,UAAU,WAAW,IAChD,CAAC,IACD,OAAO,UAAU,WACjB,MAAM,MAAM,GAAG,IACf;AAAA,IACN;AAAA,EACF;AAEA,SACE,uBAAC,SACC,iCAAC,eAAY,IAAI,EAAE,GAAG,GAAG,OAAO,IAAK,GACnC;AAAA,2BAAC,cAAW,IAAG,gCAA+B,8BAA9C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,IAAG;AAAA,QACH,UAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,QACV,OAAO,uBAAC,iBAAc,OAAM,SAArB;AAAA;AAAA;AAAA;AAAA,eAA2B;AAAA,QAClC,aAAa,CAAC,aAAa,SAAS,KAAK,IAAI;AAAA,QAC7C;AAAA,QAEA;AAAA,iCAAC,YAA8B,OAAO,aACpC;AAAA,mCAAC,YAAS,SAAS,QAAQ,WAAW,KAAtC;AAAA;AAAA;AAAA;AAAA,mBAAyC;AAAA,YACzC,uBAAC,gBAAa,SAAS,eAAvB;AAAA;AAAA;AAAA;AAAA,mBAAoC;AAAA,eAFvB,gBAAf;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UAEC,QAAQ,IAAI,CAAC,WACZ,uBAAC,YAAsB,OAAO,QAC5B;AAAA,mCAAC,YAAS,SAAS,gBAAgB,QAAQ,MAAM,IAAI,MAArD;AAAA;AAAA;AAAA;AAAA,mBAAyD;AAAA,YACzD,uBAAC,gBAAa,SAAS,UAAvB;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAAA,eAFlB,QAAf;AAAA;AAAA;AAAA;AAAA,iBAGA,CACD;AAAA;AAAA;AAAA,MApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBA;AAAA,OAzBF;AAAA;AAAA;AAAA;AAAA,SA0BA,KA3BF;AAAA;AAAA;AAAA;AAAA,SA4BA;AAEJ;AAEA,eAAe;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"16e03324750f904cf8be05125e49e32ec9725ebe"}}